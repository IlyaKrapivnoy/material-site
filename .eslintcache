[{"D:\\0CODING\\material-site\\src\\index.js":"1","D:\\0CODING\\material-site\\src\\App.js":"2","D:\\0CODING\\material-site\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":8557,"mtime":1611157309668,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ipwb4u",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"D:\\0CODING\\material-site\\src\\index.js",[],["16","17"],"D:\\0CODING\\material-site\\src\\App.js",["18"],"import React from 'react';\n// import Button from '@material-ui/core/Button';\nimport { AppBar, Container, Toolbar, IconButton, Typography, Box, Paper, \n  Grid, Card, CardMedia, CardContent, CardActions, Button \n} from '@material-ui/core';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport LayerIcon from '@material-ui/icons/Layers';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    narginRight: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1\n  },\n  mainFeaturesPost: {\n    position: \"relative\",\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundOverlay: \"rgba(0,0,0,.3)\"\n  },\n  mainFeaturesPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(6),\n    margin: theme.spacing(8)\n  },\n  changeFont: {\n    fontSize: 14\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\"\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  cardGrid: {\n    marginTop: theme.spacing(4)\n  }\n\n}))\n\nconst cards = [1,2,3,4,5,6,7,8,9];\n\nfunction App() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"recents\")\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  }\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  return (\n    <>\n    <AppBar possition=\"fixed\">\n      <Container fixed>\n        <Toolbar>\n          <IconButton edge=\"start\" \n          color=\"inherit\" aria-label=\"menu\" className={classes.menuButton}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>Logo</Typography>\n          <Box mr={3}>\n            <Button color=\"inherit\" variant=\"outlined\" onClick={handleClickOpen}>Log In</Button>\n\n              <Dialog open={open} onClose={handleClose} aria-lablelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Log in</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>Log in to see videos</DialogContentText>\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Email Adress\"\n                    type=\"email\"\n                    fullWidth\n                  />\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"pass\"\n                    label=\"Password\"\n                    type=\"password\"\n                    fullWidth\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button onClick={handleClose} color=\"primary\">Cancel</Button>\n                  <Button variant=\"contained\" onClick={handleClose} color=\"primary\">Log in</Button>\n                </DialogActions>\n              </Dialog>\n\n          </Box>\n          <Button color=\"secondary\" variant=\"contained\">Sign Up</Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n\n    <main>\n      <Paper className={classes.mainFeaturesPost}\n      style={{ backgroundImage: `url(https://source.unsplash.com/random)`}}>\n        <Container fixed>\n          <div className={classes.overlay} />\n          <Grid container>\n            <Grid item md={6}>\n              <div className={classes.mainFeaturesPostContent}>\n                <Typography\n                  component=\"h1\"\n                  variant=\"h3\"\n                  color=\"inherit\"\n                  gutterBottom\n                >\n                  Material UI Website\n                </Typography>\n                <Typography\n                  className={classes.changeFont}\n                  color=\"inherit\"\n                  paragraph\n                >\n                  Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have  \n                </Typography>\n                <Button variant=\"contained\" color=\"secondary\">\n                  Learn more\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </Container>\n      </Paper>\n\n      <div className={classes.mainContent}>\n        <Container maxWidth=\"md\">\n          <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>Some Random Text</Typography>\n          <Typography className={classes.changeFont} align=\"center\" color=\"textSecondary\" paragraph>\n          Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have. He is attributed to an unknown typesetter in the 15th century who is thought to have.  \n          </Typography>\n\n          <div className={classes.mainButtons}>\n            <Grid container spacing={5} justify=\"center\">\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\">Start Now</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"outlined\" color=\"primary\">Learn More</Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {cards.map((card) => (\n            <Grid item key={card} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia \n                  className={classes.cardMedia}\n                  image=\"https://source.unsplash.com/random\"\n                  title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Blog post\n                  </Typography>\n                  <Typography>\n                    Blog description. A few lines about a product. A few lines about a product. A few lines about a product.\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" color=\"primary\">\n                    View\n                  </Button>\n                  <Button size=\"small\" color=\"primary\">\n                    Edit\n                  </Button>\n\n                  <LayerIcon />\n                  <PlayCircleFilledIcon />\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </main>\n    <footer>\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\n        Footer\n      </Typography>\n      <BottomNavigation\n      value={value}\n      onChange={handleChange}\n      className={classes.root}>\n        <BottomNavigationAction\n        label=\"Recents\"\n        value=\"recents\"\n        icon={<RestoreIcon />}\n        />\n        <BottomNavigationAction\n        label=\"Favorites\"\n        value=\"favorites\"\n        icon={<FavoriteIcon />}\n        />\n        <BottomNavigationAction\n        label=\"Nearby\"\n        value=\"nearby\"\n        icon={<LocationOnIcon />}\n        />\n        <BottomNavigationAction\n        label=\"Folder\"\n        value=\"folder\"\n        icon={<FolderIcon />}\n        />\n      </BottomNavigation>\n            <Typography align=\"center\" color=\"textSecondary\" component=\"p\" variant=\"subtitle1\">\n              React \\ JS \\ Material UI Website is here\n            </Typography>\n    </footer>\n    </>\n  );\n}\n\nexport default App;\n","D:\\0CODING\\material-site\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":105,"column":57,"nodeType":"25","endLine":105,"endColumn":93},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/aria-props","aria-lablelledby: This attribute is an invalid ARIA attribute. Did you mean to use aria-labelledby?","JSXAttribute","no-global-assign","no-unsafe-negation"]